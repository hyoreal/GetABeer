import Head from 'next/head';
import type { GetStaticProps, InferGetStaticPropsType } from 'next';
import Advertise from '@/components/mainPage/Advertise';
import RecommendBeer from '@/components/smallCards/RecommendBeer';
import BeerCategoryBtn from '@/components/mainPage/BeerCategoryBtn';
import Footer from '@/components/Footer';
import axios from '@/pages/api/axios';
import { useEffect, useState } from 'react';
import PopularBeer from '@/components/smallCards/PopularBeer';
import { useRecoilState } from 'recoil';
import { accessToken } from '@/atoms/login';
import {
  PopularBeerType,
  RecommendBeerType,
} from '@/components/beerPage/BeerDeclare';

export default function Main({
  weeklyBeer,
}: InferGetStaticPropsType<typeof getStaticProps>) {
  const [TOKEN] = useRecoilState<string>(accessToken);
  const [popularBeer, setPopularBeer] = useState<PopularBeerType[] | string>(
    weeklyBeer
  );
  const [recommendBeer, setRecommendBeer] = useState<
    RecommendBeerType[] | string
  >('');
  const [recommendFlag, setRecommendFlag] = useState<RecommendBeerType | null>(
    null
  );

  // 사용자 추천맥주(이 경우엔 토큰 여부에 따라 렌더링 다르므로 useEffect 써야함)
  useEffect(() => {
    if (TOKEN !== '') {
      const config = {
        headers: { Authorization: TOKEN, 'Content-Type': 'application/json' },
        withCredentials: true,
      };
      axios
        .get(`/api/beers/recommend`, config)
        .then((response) => {
          setRecommendBeer(response.data);
          setRecommendFlag(response.data[0].beerId);
        })
        .catch((error) => console.log(error));
    }
  }, [TOKEN]);

  return (
    <>
      <Head>
        <title>GetABeer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/logo.png" />
      </Head>
      <main className="m-auto h-screen max-w-4xl">
        <Advertise />
        <div className="m-auto">
          <BeerCategoryBtn />
          {popularBeer === '' ? (
            <></>
          ) : (
            <>
              <PopularBeer popularBeer={popularBeer} />
            </>
          )}
          {recommendBeer === '' ? (
            <></>
          ) : recommendFlag === null ? (
            <></>
          ) : (
            <>
              <div className="m-3 mt-6 text-base font-semibold lg:text-xl">
                <span className="text-black">나를 위한</span>
                <span className="text-y-brown mr-1">추천 맥주</span>
              </div>
              <RecommendBeer recommendBeer={recommendBeer} />
            </>
          )}
        </div>
        <div className="pb-8"></div>
        <Footer />
      </main>
    </>
  );
}

export const getStaticProps: GetStaticProps = async (context) => {
  // async여야 함
  const response = await fetch(`${process.env.API_URL}/api/beers/recommend`);
  const weeklyBeer: PopularBeerType = await response.json();
  return {
    props: {
      weeklyBeer,
    },
  };
};
